var Basic=function(s){"use strict";class t{constructor(){this.EventList=new Array}static getInstance(){return this.instance=this.instance||new t,this.instance}addEventListener(s,t){this.EventList.push({name:s,listener:t})}removeEventListener(s){this.EventList=this.EventList.filter(t=>t.name!==s)}dispatchEvent(s,t){this.EventList.filter(t=>t.name===s).map(s=>s.listener).forEach(s=>s(t))}}return s.Auth=class{constructor(){this.judgeList=[]}add(s){this.judgeList.push(s)}remove(s){this.judgeList=this.judgeList.filter(t=>t.name!==s)}match(...s){var t=this.judgeList.map(t=>t.fun(s),[]),e=this.judgeList.map(s=>s);return new Promise(s=>{Promise.all(t).then(t=>{t.forEach((t,r)=>{t&&s(e[r].name)}),s("")})})}},s.Error=class{},s.EventDispatcher=t,s.Intercept=class{},s.Log=class{},s.ObserverSubject=class{constructor(){this.observers=[]}registerObserver(s){this.observers.push(s)}removeObserver(s){let t=this.observers.indexOf(s);-1!==t&&this.observers.splice(t,1)}notifyObservers(s,t=this.observers){for(let e of t)e.update(s)}},s.Storage=class{constructor(){this.storage=[]}get(s){return this.storage[s]}set(s,t){this.storage[s]=t}remove(s){this.storage[s]=void 0}clear(){this.storage=[]}},s}({});
